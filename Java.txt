


 Java :

      C:\Program Files\Java\                       Home diectory
                             jdk 1.8
                             jre 1.8


   Run the Java Program :
                          1) Using command prompt

                          2) Using IDE (eclipse)

   Compiler :
                 
              Source file (Code in English like language) ------ Program (.java)

                                  Compiler ( javac )
              
              Byte code (binary form)

                                  JVM (Java Virtual Machine)  -----> (java) ---> Interpreter
              
              Run application


   JDK ( Java Development Kit ) 1.8  ==> JRE + JVM 

   
   Setting the JAVA Path :

                         1) Temporary way
					   Command prompt >  SET PATH = pathname

                         2) Permanent way
                                           Through Control Panel

   Java Path : 
               Path where java is installed 
 
   Compiler path




 1)  Compiling Java Program

                              javac ------> To compile java program 

                              Syntax:
                                        > javac filename.java 

                                        > javac demo.java


          Note : After compilation java byte code is generated by compiler (.class file)


 2)  Running / executing Java Program


                               java -----> To run/ execute java program
                  
                               Syntax:
                                        > java filename
                                       
                                        > java demo


  Java Language :
                 1) Platform independent language
                 2) High Level language
                 3) Secure 
                 4) Object oriented language
                 5) Case sensitive ( age & Age both are different)
                 6) Compiled & interpreted language (Write once & run anywhere)
                 7) Strongly Typed Language


  Byte code :
              compiled code from the source file (.class)

              JVM reads the byte code

              Platform independent

  JVM : 
              Platform Dependent

 
  Created by : James Gosling

  
  Editions in Java :
                     1) JSE (Java Standard Edition)
                     2) JEE (Java Enterprise Edition)
                     3) J2ME (Micro edition)


  Type of Applications :
                     1) Standalone / Desktop Applications
                     2) Web Applications
                     3) Enterprise Applications
                     4) Mobile Applications


  
   Programming Structure of Java Program :

   
                         class classname
			 {
                                
                                  function defintions


                                  main function definition      
                                            Create objects  
                         }


            
    Note : main() method is automatically called by JVM.

    Classes :  
              Grouping of data members 
              
	      Data members : varibales & methods

              Performs a specific task

              Class is a blueprint which is used to create an object.

              class defines the behaviour(methods) and it has some states(variables)

              Member variable : is the variable declared inside a class.

              Member method   : is the method defined inside a class.
      
              Every class will have a name.

              class is a keyword in java

    We can use the following classes:

              1) Predefined classes : System, String

              2) User defined classes  : demo, demo1,pro1, Addition


    Object :

		Real world entity which has the attributes / features.

               Ex :
                       Product : Class

                       Type of products
                     
                         (objects) Laptop : features --- color, price, storage, processor

   			           printer : features ---- cost, printerBrand, capacity
                
		Every object will be different from every other object     
         


     How to define a class :


                             class classname
			     {
				  Classmembers (member variables, member methods)

			     }


			Ex : 
                              class Student
			      {

					int rollno;      // member variable

					void showRoll()  // member method
					{
						
					}
			      }

                              class demo
			      {
					public tatic void main(String args[])
					{
						Student s1 = new Student();    // s1 is object of student class
						s1.showRoll();
					}
   			      }

     Object Creation :
                            
                     classname objectname = new classname();


     Pillers of Java :

			1) Encapsulation : Enclosure / Unit 
					   Unit of data members
					   Ex : Class 
                                           
                            Data hiding : feature to hide the data of a class from outside the class or outside world.
 

			2) Abstraction  :
					To hide implementation details of the class


			3) Inheritance  :
                                         To access the features of one class into another class.

					 Object :     class (Parent class of all classes of the program)

			4) Polymorphism :
                                         Many forms 


=========================================================================================================


      public static void main(String args[])
      {
		
      }

      public  : main is available to outside the class (JVM can access main function)

      static  : memory saving concept
 
      void    : return type
 
      main    : function name (Entry point of the program)
  
      String args[]   : Command line arguments (args[])

   
   ====================================================================================

   	System.out.println("Welcome to Java");

        int x=20;


        System.out.println(x);

        System : Predefined class
        out : static object of the class PrintStream, defined in System class
        println() : function to display the data on the screen , Defined in PrintStream class


        Ex :
                class System
		{

			static PrintStream out;   // member variable

		}


    Note : any static data member of a class can be accessed with the help of class name ==>   System.out (PrintStream Object)

               class PrintStream
	       {
		        void println(String str)
			{
				// will print the string str on the screen
			}
               }
  

               System.out.println("Hello");


     ===================================================================================


     Stream :
                 object through which the data is transferred from source to destination

     Type of streams :
                      1) Standard output stream  ====> System.out
                      2) Standard Input stream   ====> System.in
                      3) Standard error stream   ====> System.err

     ===================================================================================


    Data types :
                 Type of data which is stored in variable

                 1) Primitive  (predefined)
						Integral        : byte , short, int, long
                                                floating point  : float , double
                                                character       : char
                                                boolean         : boolean
                              
                 2) Non primitive (User defined)
                                                Arrays
                                                String
                                                objects

    byte  :   1 byte
    short :   2 bytes
    int   :   4 bytes
    long  :   8 bytes
    
    float :   4 bytes
    double:   8 bytes

    char  :   2 bytes
   
    boolean : 1 bit

 ======================================================================================

  char : 2 bytes 
  Unicode character system (Multilingual suuport)

  boolean : true , false

  =====================================================================================


   Wrapper Classes :
                      Convert the primitive data type into non primitive type
		      Convert the non primitive data type into primitive type

                     
                      primitive datatype  ------------ Wrapper Classes
                     -------------------------------------------------
                         
                             int                    Integer
                             byte                   Byte
                             short                  Short
                             long                   Long
                             float                  Float
                             double                 Double
                             char                   Character
                             boolean                Boolean                
		   
  Type Conversion :
                   Convert a data type value into another type of data.

            Note : Narrowing -> larger type is converted into smaller type
                                 int -> byte
                              
                   Widening -> smaller type is converted into larger type               
                                 byte -> int

            Type of conversion :
            1)  Implicit (Automatic conversion)
					

            2)  Explicit (Manual conversion)

 =================================================================================



   Memebers declaration in the class and Accessing of members from outside the class:


   class xyz
   {
        members;   // declaration
   }


   class MAIN
   {
	public static void main(String args[])
	{
		xyz obj=new xyz();  

                obj.member;    // Accessing of member through object
	}
   }


 ================================================================================

  Type of variables :
                     1) Local variable 
                                       variable declared in a method or block , Value will not be accessible outside method.


                     2) Instance variable
				       seperate meory is allocated for each object. 
    				       declared inside a class and outsie the method of the same class.
				        can not be accessed in static method
				       non static

		     3) static variable
					Single memory is shared among all objects of the class
				        class variable
					can be accessed in non static method and staic method


 Static method :
                 static : keyword


                 1) can be called with the classname and . operator
                        
                        classname.staticMethodName();

                        Student.getCollege();   

===============================================================================================

 Naming Convention :

                    Class :
                           1) Class name should give the purpose of class
			   2) Camel case notation
 			   3) First letter of the class should be in capital case
			   4) Class name should not contain any space
 
                    methods :
                           1) start the method name with small case letter
                           2) there should be no space between method name  : First Name (invalid)
                                                                              FirstName  (camel case), First_Name

                    variable :
			   1) should not start a variable name with numeric.
                           2) use small case letters
                           3) abc , ABC both are different.
 			   4) Reserved words or data type should not be used as a variable name.

=============================================================================================


 Access specifiers :

                   Used to provide access permission to the data members of the class.

                   1) private
				Accessible to the same class method, butt not accessible to othe class / other package
			
                   2) protected
				Accessible only within the class and outside the class but in the same package , Not accessible to other package
                                Accessible to other package using inheritance concept

                   3) public
				Accessible to the class of the same package or different package

                   4) Default 
                                Accessible within the package, Do not specify any access specifiers like private, protected or public at the time of declaration


   Note : Methods of the class should be declared in public section,
          Instance variables should be declared either private or protected

===============================================================================================


  this keyword :
                this refers to the current object.
                To remove the ambuiguity problem.

==============================================================================================

  Constructor :
                Special member function used to initialize data members of an object.
                Same name as the class name
                called automatically by compiler
	        does not have any returning value
                constructors can be overloaded
                constructors can not be inherited
		Constructors are called at the time of creation of objects.
		Constructors should be defined in the public section

  Type of consructors :
                1) Default
			   No arguments are passed

                2) Parameterised 
              		   Arguments are passed
			                
     
  ============================================================================================

   Copy the object into another object using Parameterised constructor :


        public Employee(Employee obj)  // Parameterised constructor copying the company of one object into other object
	{
		company=obj.company;       // e4.company = e2.company
	}
		

==============================================================================================

		
   final : keyword
                   To define a variable as a constant.

                   method can be final
   
                   class can be final
==============================================================================================

  String :
           is a final class
           is a immutable class
           predefined class in      java.lang
          
           Type of Strings :
                            1) Mutable (Modifiable) :         contents can be modified
 
							StringBuffer , StringBuilder

			    2) Immutable ( Not Modifiable) :  contents can not be modified
         
							String
		
   String object can be defined in two ways :
	
	      1)  String s1="Hello World";        // String Literal
		
	      2)  String s2=new String("Welcome");  // String creation using new 
===============================================================================================

Control statements :

                       Decision making
                       Loop statements
                       Branching statements

  
 Decision making :
                       if
                       if ... else
                       if ...else if....else
                       nested if

 operator :   Relational operators       < > <= >= == !=  
              equal()  


  Scanner class : java.util
				used to read the data from user
           


		 Methods :
                                next()
 				nextInt()
 				nextDouble()

  Loop
           1) for
	   2) while
	   3) do while
	   4) Enhanced for or Foreach loop

 ===============================================================================

  Array :
          Syntax :

       1) one Dimensional Array
                                    datatype arrayname = new datatype[SIZE];

				    char alpha[]=new char[5]; // character array

 				    int num[]=new int[5];     // Integer array

               Array of Objects
                                    Employee : class


				    Employee e[]=new Employee[3];

                Array Initialization :
                                     num[0]=100;

                                     or
                                             int num[]={1,2,3,4,5};

=====================================================================================

  Method Overloading :
                      1) example of Compile time polynt data typemorphism
		      2) Same name method is defined more than once with different no of arguments & diffrent data type.

======================================================================================
 Inheritance :

                   concept of parent child relationship
                   Reusability

                   Class derives or inherits other classes is called inheritance
                   Advantage : Dont have to make efforts to write a method which is already created
                               Time saving
                   Classes :  
                             Base class / Super class / Parent class  : Properties will be used by Derived class
                             Derived class / Sub class / Child class  : Will use the properties of Base class

                   extends : keyword used to derive a class

      Type of inheritances 
                          1) Single       : A class inherits a single class only
                          2) Multilevel   : Class A inherits class B , class B inherits class C, c is grand child, A is grand parent
                          3) Hierarchical : One class can inherit multiple classes


     Note : Multiple inheritance is not supported in Java but it can be achieved using a concept  interface


                  Syntax :
                             class derivedclassname extends Baseclassname
			     {
				
			     }
======================================================================================

   Constructor calling in Inheritance   


                             Base : constructor

                             Derived : constructor


  super : keyword
		1) To call the superclass constructor
		2) To call the method of the immediate super class
                3) To call the instance variable of immediate super class

======================================================================================

  

 concrete class :
                 complete class

 Abstract Class :
                 incomplete class
                 partial implementation
                 will have methods with body and some methods will have no body
		 Objects of Abstract class can not be created, Reference of abstract class can be created
                 Abstract class can be inherited


      abstract : keyword

                 syntax :
                         abstract void showArea();
                Note : Abstract method can not have a body. The method must be declared in abstract class.
                       Abstract method body must be implemented in the derived class.



====================================================================================


 Interface :

           Interface is a contract between service provider and client.
           Interface provides full abstraction
           Interface will have all abstract methods  
           By default all methods in an interface are public,abstract
           All member variable in the interface will be public , static and final; 
           Interface can not be instantiated (can not create object of interface), refrence variable of it can be created.   
     
     interface : keyword

     1) A class can implement an interface
     2) A class can extends another class
     3) An interface can extend another interface

     Ex :

                    intref1 : interface
                    myclass : class


     implements : keyword
                          To implement an interface in the class

     Interface extending another Interface :












































    