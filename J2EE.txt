
Servlet : Servlet API (javax.servlet)
          Servlet is a Java Program which runs on the server used to
          create dynamic web pages.
          Servlet is a technology

Web container : Contains the Web Applications 

Web Server : Tomcat, Jetty, Glassfish

Web Client : Firefox, Chrome, Opera

Creation of Servlet : 1) On extending HttpServlet class
		      2) On extending GenericServlet class (implements Servlet, ServletConfig, Serializable) 

 GenericServlet class is superclass for HttpServlet
		

Servlet Lifecycle : 1) Loading the servlet
                    2) Creation of servlet instance
                    3) Initialization on calling init()
                    4) Invoking the service()
                    5) Invoke the destroy method

URL Pattern : 
            Change URL in @WebServlet annotaion

Servlet Mapping:

                Servlet can be mapped with a URL in web.xml (Deployment descriptor)

                Single servlet can be mapped with different URLs

                FirstServlet : servlet

    URL 1 :  /FirstServlet 

    URL 2 :  /FirstServlet/Welcome

    URL 3 :  /FirstServlet/Hello


Get Parameter values from URL in the servlet :

                                              getParameter() : used to get parameter value from URL, use it with request object

                  
Query String : 
                ?firstname=Rohit&lastname=Dhavan 
             

<Welcome-File-Tag> of XML file :
                                THe file written in this tag will be displayed first in the browser


 ServletConfig : interface
                         Its object is used to access the servlet configuration information from web.xml
                         

               methods :  getInitParameter() : To access one parameter at a time
                          getInitParameterNames() : Multiple parameters can be accessed
                          getServletName()
                          getServletConfig()


			   <Init-param> 
				<param-name></param-name>
				<param-value></param-value>
			   <Init-param> 
	

 ServletContext : interface
			used to share confinfiguration information about an Application for all servlets                 

		  methods : getInitParameter() : To access one parameter at a time
                            getInitParameterNames() : Multiple parameters can be accessed
                    	    setAttribute()   : Sets the object
		            getAttribute()   : retrieve object
		            removeAttribute(): removes object

                             
 Attributes in Servlet :
                             
 
 HttpServletRequst :              

			getParameter() : At a time one value can be retrieved
			getParameterValues() : At a time multiple values can be retrieved from URL 


 Creation of Form in Html & send data from the HTML form to database

 
 RequestDispatcher : interface

			Used to dispatch the request from one resource(servlet/jsp) to another resource.
			Used to include the content of one resource into another resource

 methods :  forward(request,responce) 
			forwards the request within the same application
			works on server side

	    include(request,response)

 
 HttpServletResponse
            method:  sendRedirect()
            	Redirect the response to another resource
            	Accepts URL as a parameter
                redirect the response from your application to another application
		works on clint side



  Filter :interface 
          Does filtering task like validation
          Apply on Servlets
          One servlet can have multiple filters
	  filters are independent
	  filters are pluggable
          Can perform preprocessing task & postprocessing tasks

  Filter API :
                Filter : interface
			
                         init() :  initialize filter
                         doFilter() : invoke other resource (servlet / filter)
                         destroy() : when filter is taken out

                  
		FilterChain  :   It forward the request to next resource
                
		FilterConfig :   To access the filter configuration info from web.xml



    Creation of filter :
                        class MyFilter implements Filter   // Filter is MyFilter

    web.xml (Configuration of filter)



    Listeners :    
                ServletContextListener : interface
                methods :       contextInitialized() : At the time of deployment of the project this method is called

                                contextDestroyed()

    Creation of Listener class :


               class MyListener implements ServletContextListener    //// Listener class : MyListener 






